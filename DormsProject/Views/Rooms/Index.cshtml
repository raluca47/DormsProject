@model X.PagedList.IPagedList<DormsProject.Models.Room>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Rooms";
}

<h1>Rooms</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@using (Html.BeginForm("Index", "Rooms", FormMethod.Get))
{
    <p>
        Find by floor: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Floor", "Index", new { sortOrder = ViewBag.LastNameSortParm = "floor" , currentFilter=ViewBag.CurrentFilter})
            </th>
            <th>
                Dorm
            </th>
            <th>
                Is Occupied
            </th>
            <th>
              
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Floor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Dorm.DormId)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Isoccupied)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.RoomNumber">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.RoomNumber">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.RoomNumber">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index","Rooms",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

